version: '3.8'

services:
  app:
    build: .
    ports:
      - "5000:5000"
    env_file:
      - .env
    environment:
      - REDIS_URL=redis://redis:6379/0
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/email_archive
    depends_on:
      - redis
      - postgres
    volumes:
      - .:/app
      - chroma_data:/app/chroma_db
      - email_data:/app/email_storage
    command: python -m src.api.app_auth

  celery-worker:
    build: .
    env_file:
      - .env
    environment:
      - REDIS_URL=redis://redis:6379/0
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/email_archive
    depends_on:
      - redis
      - postgres
    volumes:
      - .:/app
      - chroma_data:/app/chroma_db
      - email_data:/app/email_storage
    command: celery -A src.core.services.celery_config worker --loglevel=info --concurrency=4

  celery-beat:
    build: .
    env_file:
      - .env
    environment:
      - REDIS_URL=redis://redis:6379/0
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/email_archive
    depends_on:
      - redis
      - postgres
    volumes:
      - .:/app
      - chroma_data:/app/chroma_db
      - email_data:/app/email_storage
    command: celery -A src.core.services.celery_config beat --loglevel=info

  flower:
    build: .
    ports:
      - "5555:5555"
    env_file:
      - .env
    environment:
      - REDIS_URL=redis://redis:6379/0
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/email_archive
    depends_on:
      - redis
      - postgres
    volumes:
      - .:/app
      - chroma_data:/app/chroma_db
      - email_data:/app/email_storage
    command: celery -A src.core.services.celery_config flower --port=5555

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=email_archive
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # - ./init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

volumes:
  redis_data:
  postgres_data:
  chroma_data:
  email_data: 